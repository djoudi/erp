<?php

/**
 * BaseCostFormInvoicingItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $invoicing_id
 * @property integer $cost_id
 * @property CostFormInvoicing $CostFormInvoicing
 * @property CostFormItem $CostItem
 * 
 * @method integer               getInvoicingId()       Returns the current record's "invoicing_id" value
 * @method integer               getCostId()            Returns the current record's "cost_id" value
 * @method CostFormInvoicing     getCostFormInvoicing() Returns the current record's "CostFormInvoicing" value
 * @method CostFormItem          getCostItem()          Returns the current record's "CostItem" value
 * @method CostFormInvoicingItem setInvoicingId()       Sets the current record's "invoicing_id" value
 * @method CostFormInvoicingItem setCostId()            Sets the current record's "cost_id" value
 * @method CostFormInvoicingItem setCostFormInvoicing() Sets the current record's "CostFormInvoicing" value
 * @method CostFormInvoicingItem setCostItem()          Sets the current record's "CostItem" value
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostFormInvoicingItem extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_form_invoicing_item');
        $this->hasColumn('invoicing_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('cost_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CostFormInvoicing', array(
             'local' => 'invoicing_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('CostFormItem as CostItem', array(
             'local' => 'cost_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $auditable0 = new Doctrine_Template_Auditable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($auditable0);
        $this->actAs($softdelete0);
        $this->actAs($versionable0);
    }
}
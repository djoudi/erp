<?php

/**
 * BaseCostFormInvoicing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $employee_id
 * @property date $invoicing_Date
 * @property sfGuardUser $Employee
 * @property Doctrine_Collection $CostFormInvoicingItems
 * 
 * @method integer             getEmployeeId()             Returns the current record's "employee_id" value
 * @method date                getInvoicingDate()          Returns the current record's "invoicing_Date" value
 * @method sfGuardUser         getEmployee()               Returns the current record's "Employee" value
 * @method Doctrine_Collection getCostFormInvoicingItems() Returns the current record's "CostFormInvoicingItems" collection
 * @method CostFormInvoicing   setEmployeeId()             Sets the current record's "employee_id" value
 * @method CostFormInvoicing   setInvoicingDate()          Sets the current record's "invoicing_Date" value
 * @method CostFormInvoicing   setEmployee()               Sets the current record's "Employee" value
 * @method CostFormInvoicing   setCostFormInvoicingItems() Sets the current record's "CostFormInvoicingItems" collection
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCostFormInvoicing extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cost_form_invoicing');
        $this->hasColumn('employee_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('invoicing_Date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Employee', array(
             'local' => 'employee_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CostFormInvoicingItem as CostFormInvoicingItems', array(
             'local' => 'id',
             'foreign' => 'invoicing_id'));

        $auditable0 = new Doctrine_Template_Auditable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($auditable0);
        $this->actAs($softdelete0);
        $this->actAs($versionable0);
    }
}
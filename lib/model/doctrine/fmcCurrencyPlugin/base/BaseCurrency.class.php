<?php

/**
 * BaseCurrency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $code
 * @property string $symbol
 * @property boolean $isDefault
 * @property boolean $isActive
 * @property integer $created_by
 * @property integer $updated_by
 * @property sfGuardUser $Creator
 * @property sfGuardUser $Updater
 * @property Doctrine_Collection $CostForms
 * @property Doctrine_Collection $CostFormItems
 * 
 * @method string              getCode()          Returns the current record's "code" value
 * @method string              getSymbol()        Returns the current record's "symbol" value
 * @method boolean             getIsDefault()     Returns the current record's "isDefault" value
 * @method boolean             getIsActive()      Returns the current record's "isActive" value
 * @method integer             getCreatedBy()     Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()     Returns the current record's "updated_by" value
 * @method sfGuardUser         getCreator()       Returns the current record's "Creator" value
 * @method sfGuardUser         getUpdater()       Returns the current record's "Updater" value
 * @method Doctrine_Collection getCostForms()     Returns the current record's "CostForms" collection
 * @method Doctrine_Collection getCostFormItems() Returns the current record's "CostFormItems" collection
 * @method Currency            setCode()          Sets the current record's "code" value
 * @method Currency            setSymbol()        Sets the current record's "symbol" value
 * @method Currency            setIsDefault()     Sets the current record's "isDefault" value
 * @method Currency            setIsActive()      Sets the current record's "isActive" value
 * @method Currency            setCreatedBy()     Sets the current record's "created_by" value
 * @method Currency            setUpdatedBy()     Sets the current record's "updated_by" value
 * @method Currency            setCreator()       Sets the current record's "Creator" value
 * @method Currency            setUpdater()       Sets the current record's "Updater" value
 * @method Currency            setCostForms()     Sets the current record's "CostForms" collection
 * @method Currency            setCostFormItems() Sets the current record's "CostFormItems" collection
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrency extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('currency');
        $this->hasColumn('code', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 3,
             ));
        $this->hasColumn('symbol', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 10,
             ));
        $this->hasColumn('isDefault', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('isActive', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('created_by', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('updated_by', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Creator', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as Updater', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasMany('CostForm as CostForms', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $this->hasMany('CostFormItem as CostFormItems', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}
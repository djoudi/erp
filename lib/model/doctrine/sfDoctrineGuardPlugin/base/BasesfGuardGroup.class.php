<?php

/**
 * BasesfGuardGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property integer $manager_id
 * @property integer $default_Worktype_id
 * @property sfGuardUser $Manager
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $WorkTypes
 * @property WorkingHourWorkType $Default_Work_Type
 * @property Doctrine_Collection $sfGuardGroupPermission
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property Doctrine_Collection $WorkingHourWorkTypeGroup
 * 
 * @method string              getName()                     Returns the current record's "name" value
 * @method string              getDescription()              Returns the current record's "description" value
 * @method integer             getManagerId()                Returns the current record's "manager_id" value
 * @method integer             getDefaultWorktypeId()        Returns the current record's "default_Worktype_id" value
 * @method sfGuardUser         getManager()                  Returns the current record's "Manager" value
 * @method Doctrine_Collection getPermissions()              Returns the current record's "Permissions" collection
 * @method Doctrine_Collection getWorkTypes()                Returns the current record's "WorkTypes" collection
 * @method WorkingHourWorkType getDefaultWorkType()          Returns the current record's "Default_Work_Type" value
 * @method Doctrine_Collection getSfGuardGroupPermission()   Returns the current record's "sfGuardGroupPermission" collection
 * @method Doctrine_Collection getUsers()                    Returns the current record's "Users" collection
 * @method Doctrine_Collection getSfGuardUserGroup()         Returns the current record's "sfGuardUserGroup" collection
 * @method Doctrine_Collection getWorkingHourWorkTypeGroup() Returns the current record's "WorkingHourWorkTypeGroup" collection
 * @method sfGuardGroup        setName()                     Sets the current record's "name" value
 * @method sfGuardGroup        setDescription()              Sets the current record's "description" value
 * @method sfGuardGroup        setManagerId()                Sets the current record's "manager_id" value
 * @method sfGuardGroup        setDefaultWorktypeId()        Sets the current record's "default_Worktype_id" value
 * @method sfGuardGroup        setManager()                  Sets the current record's "Manager" value
 * @method sfGuardGroup        setPermissions()              Sets the current record's "Permissions" collection
 * @method sfGuardGroup        setWorkTypes()                Sets the current record's "WorkTypes" collection
 * @method sfGuardGroup        setDefaultWorkType()          Sets the current record's "Default_Work_Type" value
 * @method sfGuardGroup        setSfGuardGroupPermission()   Sets the current record's "sfGuardGroupPermission" collection
 * @method sfGuardGroup        setUsers()                    Sets the current record's "Users" collection
 * @method sfGuardGroup        setSfGuardUserGroup()         Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardGroup        setWorkingHourWorkTypeGroup() Sets the current record's "WorkingHourWorkTypeGroup" collection
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardGroup extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_group');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('manager_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('default_Worktype_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 40,
             ));

        $this->option('orderBy', 'name ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Manager', array(
             'local' => 'manager_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardGroupPermission',
             'local' => 'group_id',
             'foreign' => 'permission_id'));

        $this->hasMany('WorkingHourWorkType as WorkTypes', array(
             'refClass' => 'WorkingHourWorkTypeGroup',
             'local' => 'group_id',
             'foreign' => 'worktype_id'));

        $this->hasOne('WorkingHourWorkType as Default_Work_Type', array(
             'local' => 'default_Worktype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('sfGuardGroupPermission', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardUser as Users', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'sf_guard_group_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $this->hasMany('WorkingHourWorkTypeGroup', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $auditable0 = new Doctrine_Template_Auditable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($auditable0);
        $this->actAs($softdelete0);
        $this->actAs($versionable0);
    }
}
<?php

/**
 * BaseWorkingHour
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property date $date
 * @property integer $project_id
 * @property integer $worktype_id
 * @property string $comment
 * @property time $start
 * @property time $end
 * @property sfGuardUser $User
 * @property Project $Project
 * @property WorkType $WorkType
 * 
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method date        getDate()        Returns the current record's "date" value
 * @method integer     getProjectId()   Returns the current record's "project_id" value
 * @method integer     getWorktypeId()  Returns the current record's "worktype_id" value
 * @method string      getComment()     Returns the current record's "comment" value
 * @method time        getStart()       Returns the current record's "start" value
 * @method time        getEnd()         Returns the current record's "end" value
 * @method sfGuardUser getUser()        Returns the current record's "User" value
 * @method Project     getProject()     Returns the current record's "Project" value
 * @method WorkType    getWorkType()    Returns the current record's "WorkType" value
 * @method WorkingHour setUserId()      Sets the current record's "user_id" value
 * @method WorkingHour setDate()        Sets the current record's "date" value
 * @method WorkingHour setProjectId()   Sets the current record's "project_id" value
 * @method WorkingHour setWorktypeId()  Sets the current record's "worktype_id" value
 * @method WorkingHour setComment()     Sets the current record's "comment" value
 * @method WorkingHour setStart()       Sets the current record's "start" value
 * @method WorkingHour setEnd()         Sets the current record's "end" value
 * @method WorkingHour setUser()        Sets the current record's "User" value
 * @method WorkingHour setProject()     Sets the current record's "Project" value
 * @method WorkingHour setWorkType()    Sets the current record's "WorkType" value
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWorkingHour extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('working_hour');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('worktype_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('comment', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('start', 'time', null, array(
             'type' => 'time',
             'notnull' => true,
             ));
        $this->hasColumn('end', 'time', null, array(
             'type' => 'time',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Project', array(
             'local' => 'project_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('WorkType', array(
             'local' => 'worktype_id',
             'foreign' => 'id'));

        $auditable0 = new Doctrine_Template_Auditable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($auditable0);
        $this->actAs($softdelete0);
        $this->actAs($versionable0);
    }
}
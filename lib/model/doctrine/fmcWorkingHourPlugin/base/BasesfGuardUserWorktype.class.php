<?php

/**
 * BasesfGuardUserWorktype
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $worktype_id
 * @property sfGuardUser $User
 * @property WorkType $WorkType
 * 
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method integer             getWorktypeId()  Returns the current record's "worktype_id" value
 * @method sfGuardUser         getUser()        Returns the current record's "User" value
 * @method WorkType            getWorkType()    Returns the current record's "WorkType" value
 * @method sfGuardUserWorktype setUserId()      Sets the current record's "user_id" value
 * @method sfGuardUserWorktype setWorktypeId()  Sets the current record's "worktype_id" value
 * @method sfGuardUserWorktype setUser()        Sets the current record's "User" value
 * @method sfGuardUserWorktype setWorkType()    Sets the current record's "WorkType" value
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUserWorktype extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_worktype');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('worktype_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('WorkType', array(
             'local' => 'worktype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}
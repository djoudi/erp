<?php

/**
 * BaseWorkingHourLeave
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property enum $type
 * @property date $from_Date
 * @property date $to_Date
 * @property string $description
 * @property enum $status
 * @property date $report_Date
 * @property boolean $report_Received
 * @property date $report_Received_On
 * @property sfGuardUser $User
 * 
 * @method integer          getUserId()             Returns the current record's "user_id" value
 * @method enum             getType()               Returns the current record's "type" value
 * @method date             getFromDate()           Returns the current record's "from_Date" value
 * @method date             getToDate()             Returns the current record's "to_Date" value
 * @method string           getDescription()        Returns the current record's "description" value
 * @method enum             getStatus()             Returns the current record's "status" value
 * @method date             getReportDate()         Returns the current record's "report_Date" value
 * @method boolean          getReportReceived()     Returns the current record's "report_Received" value
 * @method date             getReportReceivedOn()   Returns the current record's "report_Received_On" value
 * @method sfGuardUser      getUser()               Returns the current record's "User" value
 * @method WorkingHourLeave setUserId()             Sets the current record's "user_id" value
 * @method WorkingHourLeave setType()               Sets the current record's "type" value
 * @method WorkingHourLeave setFromDate()           Sets the current record's "from_Date" value
 * @method WorkingHourLeave setToDate()             Sets the current record's "to_Date" value
 * @method WorkingHourLeave setDescription()        Sets the current record's "description" value
 * @method WorkingHourLeave setStatus()             Sets the current record's "status" value
 * @method WorkingHourLeave setReportDate()         Sets the current record's "report_Date" value
 * @method WorkingHourLeave setReportReceived()     Sets the current record's "report_Received" value
 * @method WorkingHourLeave setReportReceivedOn()   Sets the current record's "report_Received_On" value
 * @method WorkingHourLeave setUser()               Sets the current record's "User" value
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWorkingHourLeave extends MyDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('working_hour_leave');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'IllnessWReport',
              1 => 'IllnessWoReport',
              2 => 'PaidVacation',
              3 => 'UnpaidVacation',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('from_Date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('to_Date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Pending',
              1 => 'Approved',
              2 => 'Denied',
              3 => 'Cancelled',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('report_Date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('report_Received', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => false,
             ));
        $this->hasColumn('report_Received_On', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $auditable0 = new Doctrine_Template_Auditable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($auditable0);
        $this->actAs($softdelete0);
        $this->actAs($versionable0);
    }
}
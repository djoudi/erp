<?php

/**
 * BasesfGuardGroupWorktype
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $group_id
 * @property integer $worktype_id
 * @property sfGuardGroup $Group
 * @property WorkType $WorkType
 * 
 * @method integer              getGroupId()     Returns the current record's "group_id" value
 * @method integer              getWorktypeId()  Returns the current record's "worktype_id" value
 * @method sfGuardGroup         getGroup()       Returns the current record's "Group" value
 * @method WorkType             getWorkType()    Returns the current record's "WorkType" value
 * @method sfGuardGroupWorktype setGroupId()     Sets the current record's "group_id" value
 * @method sfGuardGroupWorktype setWorktypeId()  Sets the current record's "worktype_id" value
 * @method sfGuardGroupWorktype setGroup()       Sets the current record's "Group" value
 * @method sfGuardGroupWorktype setWorkType()    Sets the current record's "WorkType" value
 * 
 * @package    fmc
 * @subpackage model
 * @author     Yasin Aydin (yasin@yasinaydin.net)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardGroupWorktype extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_group_worktype');
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('worktype_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('WorkType', array(
             'local' => 'worktype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable();
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}